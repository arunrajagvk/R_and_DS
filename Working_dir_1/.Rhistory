as.numeric(z)
z <- c(T,1.5)
as.numeric(z)
as.character(z)
z <- vector("complex",length=5)
z
list()
help(list())
help(list)
m<-list(m1=1:10,m2="S")
m
m[1]
m[[3]]
m[[1]]
m[[m2]]
m[[3]]
m[m2]
m$S
m$1
m$m1
m$m2
m[m2]
m
m[5]
m[m1$5]
m[[1,5]]
m[[c(1,5)]]
m[[1]][[6]]
m$m
m[["m"]]
m[["m2"]]
install.packages("swirl")
library("swirl")
swirl()
num_vect<-c(0.5,55,-10,6)
tf-<(num_vect <1)
tf<-(num_vect <1)
info()
play()
num_vect<1
exit()
bye()
swirl()
5+7
x <- 5+7
x
y<-x-3
y
z<-c(1.1,9,3.14)
?c
z
c(z,555,z)
z*2+100
mySqrt<-sqrt(z-1)
mySqrt
myDiv<-mySqrt/z
myDiv<-(mySqrt/z)
myDiv<-(z/mySqrt)
myDiv<-z/mySqrt
myDiv
c(1,2,3,4)+c(0,10)
c(1,2,3,4)+c(0,10,100)
1:20
pi:10
15
15:1
:
x <- list(2, "a", "b", TRUE)
exit()
exit
quit()
x <- list(2, "a", "b", TRUE)
x[2]
x[[2]]
new<-read.csv("/home/arunraja/Downloads/hw1_data.csv")
new
new$Ozone
miss<-new$Ozone
is.nan(miss)
is.na(miss)
sum(is.na(miss))
mean(!is.na(new$Ozone))
miss[5]
calc<-(!is.na(miss)- is.na(miss))
calc
mean(calc)
miss<-new$Ozone
miss
mean(miss)
mean(miss,is.na=T)
mean(miss,is.na=F)
?mean
mean(miss,na.rm=F)
mean(miss,na.rm=T)
new
new$Ozone>31
Oni<-new$Ozone>31
Oni
(new$Ozone)>31
c(new$Ozone)>31
miss<-subset(new,Ozone>41)
miss
miss<-subset(new)
miss
subset(miss,Ozone>31 & Temp>90)
calc<-subset(miss,Ozone>31 & Temp>90)
mean(subset(calc,Solar.R))
mean(subset(calc$Solar.R))
mean(calc$Solar.R)
mean(miss$Temp,Month=6)
miss
miss$Temp
subset(miss,Month=6)
mean(subset(miss$Temp,Month=6))
cc<-subset(miss,Month=6)
cc
mean(cc$Temp)
cc
cc<-subset(miss,Month==6)
mean(cc$Temp)
subset(miss$Ozone,Month==5,Max(Ozone))
miss
subset(miss$Ozone,Month==5)
subset(miss,Month==5)
mean(cc$Temp)
cc<-subset(miss,Month==5)
max(cc$Ozone)
max(cc$Ozone,na.rm=T)
x <- 1:4
y <- 2:3
x+y
add<-function(a,b){
a+b
}
add(3,4)
above_10 <- function(x){
use <- x>10
x[use]
}
above_10(45,22,1,34)
above_10(45)
val <- c(45,22,1,34)
above_10(val)
above  <- function(x,n){
use <- x>n
x[use]
}
above(val,30)
above  <- function(x,n=10){
print("Default value is 10")
use <- x>n
x[use]
}
above(val)
above  <- function(x,n=10){
print("Default comparison value is 10")
use <- x>n
x[use]
}
columnmean <- function(y){
nc <- ncol(y)
means <- numeric(nc)
for(i in 1:nc){
means[i] <- mean(y[,i])
}
means
}
newmatrix <- matrix(1:20,4,5)
columnmean(newmatrix)
newmatrix
ncols(newmatrix)
ncol(newmatrix)
ncc <- ncol(newmatrix)
numeric(nc)
numeric(ncc)
?numeric
numeric(44)
mean(newmatrix[,i])
mean(newmatrix[1,1])
mean(newmatrix[1,5])
newmatrix
ls(environment(columnmean))
ls(environment())
ls(environment(above))
getwd()
setwd("/home/hduser/")
setwd("/home/hduser/R_and_DS/Working_dir_1")
getwd()
if(!dir.exists("specdata")){
return TRUE
}
if(!dir.exists("specdata")){
"yes"
}
if(!file.exists("specdata")){
"yes"
}
if(!file.exists("specdata")){
ret <-"yes"
}
else { ret <- "No" }
ret
if(!file.exists("specdata")){
ret <-"yes"
}
else { ret <- "No" }
if(!file.exists("specdata")){
ret <-"yes"
}
else {
ret <- "No"
}
if(!file.exists("specdata")){
ret <-"yes"
}
else {
ret <- "No"
}
if(file.exists("specdata")){
ret <-"yes"
}
else {
ret <- "No"
}
file.exists("specdata")
if(file.exists("specdata")){
ret <-"yes"
}
else (){
ret <- "No"
}
if(file.exists("specdata")){
ret <-"yes"
}
else
ret <- "No"
if(file.exists("specdata")){
ret <-"yes"
}
else {
ret <- "No"
}
if(file.exists("specdata")){
ret <-"yes"
}
else {
mix <- "No"
}
if(file.exists("specdata")){
ret <-"yes"
}
else {
"No"
}
{
if(file.exists("specdata"))
{
ret <-"yes"
}
else {
ret <- "No"
}
}
ret
{
if(file.exists("specdata"))
{
ret <-"no"
}
else {
ret <- "No"
}
}
ret
{
if(!file.exists("specdata"))
{
ret <-"no"
}
else {
ret <- "No"
}
}
ret
download.file(fileUrl,destfile="/home/hduser/R_and_DS/data/camera.csv", method="curl")
fileUrl <- "https://data.baltimorecity.gov/api/views/dz54-2aru/rows.csv?accessType=DOWNLOAD"
download.file(fileUrl,destfile="/home/hduser/R_and_DS/data/camera.csv", method="curl")
list.files(getwd())
list.files(./getwd())
getwd()
list.files("/home/hduser/R_and_DS/")
download.file(fileUrl,destfile="/home/hduser/R_and_DS/data/camera.csv", method="curl")
download.file(fileUrl,destfile="/home/hduser/R_and_DS/data/camera.csv", method="curl")
download.file(fileUrl,destfile="./data/camera.csv", method="curl")
download.file(fileUrl,destfile="/home/hduser/R_and_DS/camera.csv", method="curl")
list.files("/home/hduser/R_and_DS/")
dateDownloaded <- data()
dateDownloaded
dateDownloaded <- date()
dateDownloaded
cameraData <- read.table("./camera.csv")
cameraData <- read.table("/home/hduser/R_and_DS/camera.csv")
head(cameraData)
cameraData <- read.table("/home/hduser/R_and_DS/camera.csv", sep="," , header= T)
head(cameraData)
if(!file.exists("/home/hduer/R_and_DS/data")){
dir.create("/home/hduer/R_and_DS/data")
}
fileUrl <- "https://data.baltimorecity.gov/api/views/dz54-2aru/rows.xlsx?accessType=DOWNLOAD"
download.file(fileUrl, destfile="/home/hduer/R_and_DS/data/camera.xlsx")
dataeDownloaded<-date()
if(!file.exists("../data")){
dir.create("../data")
}
fileUrl <- "https://data.baltimorecity.gov/api/views/dz54-2aru/rows.xlsx?accessType=DOWNLOAD"
download.file(fileUrl, destfile="/home/hduer/R_and_DS/data/camera.xlsx")
dataeDownloaded<-date()
download.file(fileUrl, destfile="/home/hduser/R_and_DS/data/camera.xlsx")
list.files("/home/hduser/R_and_DS/")
fileUrl <- "https://data.baltimorecity.gov/api/views/dz54-2aru/rows.xlsx?accessType=DOWNLOAD"
download.file(fileUrl, destfile="/home/hduser/R_and_DS/data/camera.xlsx", method="curl")
dataeDownloaded<-date()
dateDownloaded<-date()
library(xlsx)
install.packages("xlsx")
library(xlsx)
cameraData <- read.xlsx("../data/camera.xlsx", sheetIndex=1, header=T)
head(cameraData)
cameraData <- read.xlsx("../data/camera.xlsx", sheetIndex=1, header=T, colIndex=1:3, rowIndex= 1:3)
cameraData
install.packages("XLConnect")
library("XLConnect")
library(XML)
install.packages("XML")
library(XML)
library(XML)
install.packages("XML")
install.packages("XML")
library(XML)
install.packages("XML")
library(XML)
fileUrl <- "http://www.w3schools.com/xml/simple.xml"
fileUrl <- "http://www.w3schools.com/xml/simple.xml"
doc <- xmlTreeParse(fileUrl, useInternal=T)
rootNode <- xmlRoot(doc)
xmlName(rootNode)
xmlRoot(doc)
xmlTreeParse(fileUrl, useInternal=T)
"http://www.w3schools.com/xml/simple.xml"
names(rootNode)
xmlRoot(doc)
rootNode[[1]]
rootNode[[3]][[3]]
doc[[1]]
xmlSApply(rootNode,xmlValue)
rootNode <- xmlRoot(doc)
xmlSApply(rootNode,xmlValue)
xpathSApply(rootNode,"//name",xmlValue)
fileUrl <- "http://espn.go.com/nfl/team/_/name/bal/baltimore-ravens"
doc <- htmlTreeParse(fileUrl, useInternal=T)
fileUrl <- "https://data.baltimorecity.gov/Transportation/Baltimore-Fixed-Speed-Cameras/dz54-2aru"
doc <- htmlTreeParse(fileUrl, useInternal=T)
fileUrl <- "http://www.flipkart.com/mobiles?otracker=hp_nmenu_sub_electronics_0_Mobiles"
doc <- htmlTreeParse(fileUrl, useInternal=T)
?xpath
?xpathSApply
xpathSApply <- (doc,"//li[@class='nav-section-cat-list']",xmlValue)
xpathSApply(doc,"//li[@class='nav-section-cat-list']",xmlValue)
xpathSApply(doc,"//li[@class='no-border greeting-link']",xmlValue)
rootNode <- xmlRoot(doc)
names(rootNode)
xmlRoot(doc)
rootNode [[5]][[1]]
rootNode [[2][[1]]
rootNode [[2]]][[1]]
rootNode [[2]][[1]]
rootNode [[3]][[2]]
rootNode [[3]][[4]]
rootNode [[3]][[1]]
rootNode [[1]][[1]]
rootNode [[1]][[2]]
rootNode [[1]][[77]]
rootNode [[1]][[7]]
fileUrl <- "http://www.flipkart.com/watches/pr?p%5B%5D=facets.ideal_for%255B%255D%3DMen&p%5B%5D=sort%3Dpopularity&sid=r18&facetOrder%5B%5D=ideal_for&otracker=ch_vn_nav_catergorylinks_0_AllBrands"
doc <- htmlTreeParse(fileUrl, useInternal=T)
rootNode <- xmlRoot(doc)
xpathSApply(doc,"//li[@class='parent store first']",xmlValue)
xpathSApply(doc,"//li[@class='facet ']",xmlValue)
xpathSApply(doc,"//li[@class='facet '] //li[@title='Men']",xmlValue)
?xpathSApply
xpathSApply(doc,"//li[@class='facet '] title='Men'",xmlValue)
xpathSApply(doc,"//li[@class='facet ' & @title='Men'",xmlValue)
xpathSApply(doc,"//li[@class='facet ' & @title='Men']",xmlValue)
xpathSApply(doc,"//li[@class='facet ' @title='Men']",xmlValue)
library(jsonlite)
jsonData <- fromJSON("https://api.github.com/user/jtleek/repos")
jsonData <- fromJSON("https://api.github.com/users/jtleek/repos")
names(jsonData)
fromJSON("https://api.github.com/users/jtleek/repos")
names(jsonData)
names(jsonData$owner)
names(jsonData$owner$login)
jsonData$owner$login
data(iris)
data(iris)
data()
data(Nile)
data(iris)
iris
myjson <- toJSON(iris, PRETTY= T)
myjson
cat(myjson)
myjson <- toJSON(iris, pretty= T)
cat(myjson)
iris2 <- fromJSON(myjson)
iris2
library(data.table)
install.packages(data.table)
install.packages("data.table")
rnorm(9)
DF <- data.frame(x=rnorm(9) , y=rep(c("a", "b", "c"),each=3), z=rnorm(9))
head(DF)
DF <- data.frame(x=rnorm(9) , y=rep(c("a", "b", "c"),each=3), z=rnorm(9))
head(DF)
tables()
?tables
?table
?some.tables()
library(data.table)
library(data.table)
tables()
DF <- data.frame(x=rnorm(9) , y=rep(c("a", "b", "c"),each=3), z=rnorm(9))
tables()
head(DF)
tables()
DT <- data.table(x=rnorm(9) , y=rep(c("a", "b", "c"),each=3), z=rnorm(9))
tables()
DT
DF
DT[2,]
?data.table
DT[,2]
DT[,list(2)]
DT[,list(y)]
DF[,y]
DT[,table(y)]
