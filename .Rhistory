as.numeric(z)
z <- c(T,1.5)
as.numeric(z)
as.character(z)
z <- vector("complex",length=5)
z
list()
help(list())
help(list)
m<-list(m1=1:10,m2="S")
m
m[1]
m[[3]]
m[[1]]
m[[m2]]
m[[3]]
m[m2]
m$S
m$1
m$m1
m$m2
m[m2]
m
m[5]
m[m1$5]
m[[1,5]]
m[[c(1,5)]]
m[[1]][[6]]
m$m
m[["m"]]
m[["m2"]]
install.packages("swirl")
library("swirl")
swirl()
num_vect<-c(0.5,55,-10,6)
tf-<(num_vect <1)
tf<-(num_vect <1)
info()
play()
num_vect<1
exit()
bye()
swirl()
5+7
x <- 5+7
x
y<-x-3
y
z<-c(1.1,9,3.14)
?c
z
c(z,555,z)
z*2+100
mySqrt<-sqrt(z-1)
mySqrt
myDiv<-mySqrt/z
myDiv<-(mySqrt/z)
myDiv<-(z/mySqrt)
myDiv<-z/mySqrt
myDiv
c(1,2,3,4)+c(0,10)
c(1,2,3,4)+c(0,10,100)
1:20
pi:10
15
15:1
:
x <- list(2, "a", "b", TRUE)
exit()
exit
quit()
x <- list(2, "a", "b", TRUE)
x[2]
x[[2]]
new<-read.csv("/home/arunraja/Downloads/hw1_data.csv")
new
new$Ozone
miss<-new$Ozone
is.nan(miss)
is.na(miss)
sum(is.na(miss))
mean(!is.na(new$Ozone))
miss[5]
calc<-(!is.na(miss)- is.na(miss))
calc
mean(calc)
miss<-new$Ozone
miss
mean(miss)
mean(miss,is.na=T)
mean(miss,is.na=F)
?mean
mean(miss,na.rm=F)
mean(miss,na.rm=T)
new
new$Ozone>31
Oni<-new$Ozone>31
Oni
(new$Ozone)>31
c(new$Ozone)>31
miss<-subset(new,Ozone>41)
miss
miss<-subset(new)
miss
subset(miss,Ozone>31 & Temp>90)
calc<-subset(miss,Ozone>31 & Temp>90)
mean(subset(calc,Solar.R))
mean(subset(calc$Solar.R))
mean(calc$Solar.R)
mean(miss$Temp,Month=6)
miss
miss$Temp
subset(miss,Month=6)
mean(subset(miss$Temp,Month=6))
cc<-subset(miss,Month=6)
cc
mean(cc$Temp)
cc
cc<-subset(miss,Month==6)
mean(cc$Temp)
subset(miss$Ozone,Month==5,Max(Ozone))
miss
subset(miss$Ozone,Month==5)
subset(miss,Month==5)
mean(cc$Temp)
cc<-subset(miss,Month==5)
max(cc$Ozone)
max(cc$Ozone,na.rm=T)
x <- 1:4
y <- 2:3
x+y
add<-function(a,b){
a+b
}
add(3,4)
above_10 <- function(x){
use <- x>10
x[use]
}
above_10(45,22,1,34)
above_10(45)
val <- c(45,22,1,34)
above_10(val)
above  <- function(x,n){
use <- x>n
x[use]
}
above(val,30)
above  <- function(x,n=10){
print("Default value is 10")
use <- x>n
x[use]
}
above(val)
above  <- function(x,n=10){
print("Default comparison value is 10")
use <- x>n
x[use]
}
columnmean <- function(y){
nc <- ncol(y)
means <- numeric(nc)
for(i in 1:nc){
means[i] <- mean(y[,i])
}
means
}
newmatrix <- matrix(1:20,4,5)
columnmean(newmatrix)
newmatrix
ncols(newmatrix)
ncol(newmatrix)
ncc <- ncol(newmatrix)
numeric(nc)
numeric(ncc)
?numeric
numeric(44)
mean(newmatrix[,i])
mean(newmatrix[1,1])
mean(newmatrix[1,5])
newmatrix
ls(environment(columnmean))
ls(environment())
ls(environment(above))
View(calc)
library(xlsx)
gas
gas <- read.xlsx("../data/gas.xlsx", sheetIndex=1, header=T)
list.files()
getwd()
setwd("/home/hduser/R_and_DS")
list.files()
gas <- read.xlsx("../data/gas.xlsx", sheetIndex=1, header=T)
list.files("/home/hduser/R_and_DS/data")
getwd()
gas <- read.xlsx("../data/gas.xlsx", sheetIndex=1, header=T)
gas <- read.xlsx("/data/gas.xlsx", sheetIndex=1, header=T)
gas <- read.xlsx("../data/gas.xlsx", sheetIndex=1, header=T)
list.files("/home/hduser/R_and_DS/data")
getwd()
gas <- read.xlsx("../R_and_DS/data/gas.xlsx", sheetIndex=1, header=T)
gas
head(gas)
?read.xlsx
dat <- read.xlsx("../R_and_DS/data/gas.xlsx", sheetIndex=1, header=T,rowIndex=18:23,colIndex=7:15)
dat
dat$Zip
sum(dat$Zip*dat$Ext,na.rm=T)
fileURL <- "https://d396qusza40orc.cloudfront.net/getdata%2Fdata%2Frestaurants.xml"
fileURL <- "https://d396qusza40orc.cloudfront.net/getdata%2Fdata%2Frestaurants.xml"
doc <- xmlTreeParse(fileUrl, useInternal=T)
library(XML)
fileURL <- "https://d396qusza40orc.cloudfront.net/getdata%2Fdata%2Frestaurants.xml"
doc <- xmlTreeParse(fileUrl, useInternal=T)
doc <- xmlTreeParse(fileURL, useInternal=T)
doc <- htmlTreeParse(fileURL, useInternal=T)
doc <- xmlTreeParse(fileURL, useInternal=T)
fileURL <- "https://d396qusza40orc.cloudfront.net/getdata%2Fdata%2Frestaurants.xml"
doc <- xmlTreeParse(fileURL, useInternal=T)
doc <- htmlTreeParse(fileURL, useInternal=T)
rootNode <- xmlRoot(doc)
xmlName(rootNode)
names(rootNode)
xpathSApply(rootNode,"//zipcode",xmlValue)
rootNode
htmlTreeParse(fileURL, useInternal=T)
library(XML)
fileURL <- "https://d396qusza40orc.cloudfront.net/getdata%2Fdata%2Frestaurants.xml"
xmlTreeParse
xmlTreeParse(fileURL, useInternal=T)
doc <- xmlParse(fileURL, useInternal=T)
doc <- htmlTreeParse(fileURL, useInternal=T)
htmlTreeParse(fileURL, useInternal=T)
fileURL <- "https://d396qusza40orc.cloudfront.net/getdata%2Fdata%2Frestaurants.xml"
fileUrl <- "http://www.w3schools.com/xml/simple.xml"
doc <- xmlTreeParse(fileUrl, useInternal=T)
xmlTreeParse(fileUrl, useInternal=T)
fileURL <- "http://d396qusza40orc.cloudfront.net/getdata%2Fdata%2Frestaurants.xml"
doc <- htmlTreeParse(fileURL, useInternal=T)
rootNode <- xmlRoot(doc)
xmlRoot(doc)
xmlName(rootNode)
names(rootNode)
rootNode[[1]]
xpathSApply(rootNode,"//zipcode",xmlValue)
xmlSApply(rootNode,xmlValue)
xpathSApply(rootNode,"//zipcode",xmlValue)
xpathSApply(rootNode,"//zipcode:21231",xmlValue)
?xpathSApply
xpathSApply(rootNode,"//zipcode",xmlValue=21231)
zipv <-xpathSApply(rootNode,"//zipcode",xmlValue)
zipv
zipv=21231
zipv==21231
zipv
zipv <-xpathSApply(rootNode,"//zipcode",xmlValue)
zipv==21231
count(zipv==21231)
sum(zipv==21231)
library(data.table)
fileURL <- "https://d396qusza40orc.cloudfront.net/getdata%2Fdata%2Fss06pid.csv "
download.file(fileURL,destfile="/home/hduser/R_and_DS/data/ASurvry.csv",method="curl")
?data.table
NDT <- data.table("/home/hduser/R_and_DS/data/ASurvry.csv")
NDT
NDT <- data.table(file="/home/hduser/R_and_DS/data/ASurvry.csv")
NDT
?read.csv
fpath <- read.csv("/home/hduser/R_and_DS/data/ASurvry.csv", header =T, col.names=T )
NDT <- data.table(fpath)
fpath <- read.csv("/home/hduser/R_and_DS/data/ASurvry.csv", header =T, col.names=T )
fpath <- read.csv("/home/hduser/R_and_DS/data/ASurvry.csv", header =T)
NDT <- data.table(fpath)
NDT
DT<-system.read(fread(fpath))
DT<-fread(fpath)
DT<-fread("/home/hduser/R_and_DS/data/ASurvry.csv")
DT
DT<-fread("/home/hduser/R_and_DS/data/ASurvry.csv")
?fread
head(DT)
install.packages("RMySQL")
install.packages("RMySQL")
install.packages("RMySQL")
library("RMySQL")
mylocal <- dbConnect(MySQL)
?dbConnect
m <-dbDriver ("RODBC")
library(RODBC)
m <-dbDriver ("RODBC")
m <-dbDriver("RODBC")
mylocal <- dbConnect("RODBC")
mylocal <- dbConnect(MySQL())
result <- dbGetQuery(mylocal,"show databases;");
result
mylocal <- dbConnect(MySQL(),user="root", password="hduser")
result <- dbGetQuery(mylocal,"show databases;");
result
dbDisconnect(mylocal)
ucscDB <- dbConnect(MySQL(), user="genome", host="genome-mysql.cse.ucsc.edu")
result <- dbGetQuery(ucscDB,"Show databases;")
result
hg19 <- dbConnect(MySQL(), user="genome",db="hg19", host="genome-mysql.cse.ucsc.edu")
allTables <- dbListTables(hg19)
length(allTables)
allTables [1:5]
dbListFields("HInv")
dbListFields(hg19,"HInv")
dbListFields(hg19,"HInv")
dbGetQuery(hg19,"select count(*) from mrnaAcc")
dbListFields(hg19,"HInv")
dbGetQuery(hg19,"select count(*) from HInv")
dbGetQuery(hg19,"select top 10 * from HInv")
dbGetQuery(hg19,"select top 10 * from HInv;")
dbGetQuery(hg19,"select * from HInv;")
dbGetQuery(hg19,"select * from HInv limit 10;")
readHInv <- dbReadTable(hg19,"HInv")
head(readHInv)
query <- dbSendQuery(hg19,"select * from affyU133Plus2 where misMatches between 1 and 3")
affMis <- fetch(query)
affMis
quantile(affMis$misMatches)
affMis <- fetch(query);quantile(affMis$misMatches)
head(affMis)
?quantile
fetch(query,n=15)
affMisSmall <- fetch(query,n=15)
dim(affMisSmall)
dbDisconnect(hg19)
dbClearresult(query)
dbClearResult(query)
dbDisconnect(hg19)
